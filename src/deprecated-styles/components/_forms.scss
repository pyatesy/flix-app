@use '../base/variables' as *;
@use 'sass:map';
@use 'sass:color';

// Form Styles
.form-group {
  margin-bottom: spacing(2);

  label {
    display: block;
    margin-bottom: spacing(1);
    color: map.get($colors, 'white');
    font-weight: 500;
  }

  .form-control {
    width: 100%;
    padding: spacing(1.5) spacing(2);
    background: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: $border-radius;
    color: map.get($colors, 'white');
    transition: $transition-base;

    &:focus {
      background: rgba(255, 255, 255, 0.15);
      border-color: map.get($colors, 'primary');
      outline: none;
    }

    &::placeholder {
      color: rgba(255, 255, 255, 0.5);
    }
  }

  textarea.form-control {
    min-height: 120px;
    resize: vertical;
  }

  select.form-control {
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='%23ffffff' viewBox='0 0 16 16'%3E%3Cpath d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right spacing(2) center;
    padding-right: spacing(4);
  }
}

// Form Validation
.form-control {
  &.is-invalid {
    border-color: map.get($colors, 'danger');
    background: rgba(map.get($colors, 'danger'), 0.1);

    &:focus {
      border-color: map.get($colors, 'danger');
      box-shadow: 0 0 0 0.2rem rgba(map.get($colors, 'danger'), 0.25);
    }
  }

  &.is-valid {
    border-color: map.get($colors, 'success');
    background: rgba(map.get($colors, 'success'), 0.1);

    &:focus {
      border-color: map.get($colors, 'success');
      box-shadow: 0 0 0 0.2rem rgba(map.get($colors, 'success'), 0.25);
    }
  }
}

.invalid-feedback {
  display: none;
  color: map.get($colors, 'danger');
  font-size: 14px;
  margin-top: spacing(0.5);
}

.is-invalid ~ .invalid-feedback {
  display: block;
}

// Form Checkboxes & Radios
.form-check {
  display: flex;
  align-items: center;
  gap: spacing(1);
  margin-bottom: spacing(1);

  .form-check-input {
    width: 18px;
    height: 18px;
    margin: 0;
    cursor: pointer;

    &:checked {
      background-color: map.get($colors, 'primary');
      border-color: map.get($colors, 'primary');
    }
  }

  .form-check-label {
    color: map.get($colors, 'white');
    cursor: pointer;
  }
}

// Form Switches
.form-switch {
  .form-check-input {
    width: 40px;
    height: 20px;
    margin: 0;
    cursor: pointer;

    &:checked {
      background-color: map.get($colors, 'primary');
      border-color: map.get($colors, 'primary');
    }
  }
}

// Form Range
.form-range {
  width: 100%;
  height: 1.5rem;
  padding: 0;
  background-color: transparent;
  appearance: none;

  &::-webkit-slider-thumb {
    width: 1rem;
    height: 1rem;
    margin-top: -0.25rem;
    background-color: map.get($colors, 'primary');
    border: 0;
    border-radius: 1rem;
    appearance: none;
  }

  &::-webkit-slider-runnable-track {
    width: 100%;
    height: 0.5rem;
    color: transparent;
    cursor: pointer;
    background-color: rgba(255, 255, 255, 0.2);
    border-color: transparent;
    border-radius: 1rem;
  }
}

// Form File Input
.form-control[type="file"] {
  padding: spacing(1);
  line-height: 1.5;

  &::-webkit-file-upload-button {
    padding: spacing(1) spacing(2);
    margin: spacing(-1) spacing(-2);
    margin-right: spacing(1);
    color: map.get($colors, 'white');
    background-color: map.get($colors, 'primary');
    border: 0;
    border-radius: $border-radius;
    transition: $transition-base;
    cursor: pointer;

    &:hover {
      background-color: color.adjust(map.get($colors, 'primary'), $lightness: -10%);
    }
  }
}

// Form Sizes
.form-control-sm {
  padding: spacing(1) spacing(1.5);
  font-size: 14px;
}

.form-control-lg {
  padding: spacing(2) spacing(2.5);
  font-size: 18px;
}

// Form Grid
.form-row {
  display: flex;
  flex-wrap: wrap;
  margin-right: -spacing(1);
  margin-left: -spacing(1);

  > .form-group {
    padding-right: spacing(1);
    padding-left: spacing(1);
  }
}

// Form Inline
.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  gap: spacing(2);

  .form-group {
    margin-bottom: 0;
  }
}

// Form Floating Labels
.form-floating {
  position: relative;

  > .form-control {
    height: calc(3.5rem + 2px);
    padding: spacing(1.5) spacing(2);
  }

  > label {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    padding: spacing(1.5) spacing(2);
    pointer-events: none;
    border: 1px solid transparent;
    transform-origin: 0 0;
    transition: opacity .1s ease-in-out, transform .1s ease-in-out;
  }

  > .form-control:focus ~ label,
  > .form-control:not(:placeholder-shown) ~ label {
    opacity: .65;
    transform: scale(.85) translateY(-0.5rem) translateX(0.15rem);
  }
}

// Form Help Text
.form-text {
  margin-top: spacing(0.5);
  font-size: 14px;
  color: rgba(255, 255, 255, 0.5);
}

// Form Disabled States
.form-control:disabled,
.form-control[readonly] {
  background-color: rgba(255, 255, 255, 0.05);
  opacity: 0.65;
  cursor: not-allowed;
}

// Form Focus States
.form-control:focus {
  color: map.get($colors, 'white');
  background-color: rgba(255, 255, 255, 0.15);
  border-color: map.get($colors, 'primary');
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(map.get($colors, 'primary'), 0.25);
}

// Form Placeholder
.form-control::placeholder {
  color: rgba(255, 255, 255, 0.5);
  opacity: 1;
}

// Form Autofill
.form-control:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 30px rgba(255, 255, 255, 0.1) inset;
  -webkit-text-fill-color: map.get($colors, 'white');
} 